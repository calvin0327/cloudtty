apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "jobTemplate.config.fullname" . }}
  namespace: {{ .Release.Namespace }}
data: 
  job-temp.yaml: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      namespace: {{`{{ .Namespace }}`}}
      name: {{`{{ .Name }}`}}
      labels:
        ownership: {{`{{ .Ownership }}`}}
        {{- if .Values.labels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.jobTemplate.labels "context" $ ) | nindent 4 }}
        {{- end }}
    spec:
      activeDeadlineSeconds: 3600
      ttlSecondsAfterFinished: 60
      parallelism: 1
      completions: 1
      template:
        spec:
          {{- include "cloudtty.job.imagePullSecrets" . | nindent 10 }}
          containers:
          - name: web-tty
            image: {{ include "cloudtty.job.image" . }}
            imagePullPolicy: {{ .Values.jobTemplate.image.pullPolicy }}
            ports:
            - containerPort: 7681
              name: tty-ui
              protocol: TCP
            command:
              - bash
              - "-c"
              - |
                once=""
                index=""
                if [ "${ONCE}" == "true" ];then once=" --once "; fi;
                if [ -f /index.html ]; then index=" --index /index.html ";fi
                if [ -z "${TTL}" ] || [ "${TTL}" == "0" ];then
                    ttyd ${index} ${once} sh -c "${COMMAND}"
                else
                    timeout ${TTL} ttyd ${index} ${once} sh -c "${COMMAND}" || echo "exiting"
                fi
            env:
            - name: KUBECONFIG
              value: /usr/local/kubeconfig/config
            - name: ONCE
              value: {{`"{{ .Once }}"`}}
            - name: TTL
              value: {{`"{{ .Ttl }}"`}}
            - name: COMMAND
              value: {{`{{ .Command }}`}}
            volumeMounts:
              - mountPath: /usr/local/kubeconfig/
                name: kubeconfig
            readinessProbe:
              tcpSocket:
                port: 7681
              periodSeconds: 5
            livenessProbe:
              tcpSocket:
                port: 7681
              periodSeconds: 20
          restartPolicy: Never
          volumes:
          - configMap:
              defaultMode: 420
              name: {{`{{ .Configmap }}`}}
            name: kubeconfig
